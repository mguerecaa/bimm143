---
title: "Class 18: Pertussis mini-project"
author: "Melissa Guereca (PID:A16511023)"
format: pdf
editor: visual
---

First we will examine and explore Pertussis case numbers in the US as tracked by the CDC: https://www.cdc.gov/pertussis/surv-reporting/cases-by-year.htmlinstall.packages("datapasta")

We can use the datapasta package to scrape this data form the website into R.

```{r}
cdc <- data.frame(
                                year = c(1922L,1923L,1924L,1925L,1926L,
                                         1927L,1928L,1929L,1930L,1931L,
                                         1932L,1933L,1934L,1935L,1936L,1937L,
                                         1938L,1939L,1940L,1941L,1942L,
                                         1943L,1944L,1945L,1946L,1947L,1948L,
                                         1949L,1950L,1951L,1952L,1953L,1954L,
                                         1955L,1956L,1957L,1958L,1959L,
                                         1960L,1961L,1962L,1963L,1964L,1965L,
                                         1966L,1967L,1968L,1969L,1970L,
                                         1971L,1972L,1973L,1974L,1975L,1976L,
                                         1977L,1978L,1979L,1980L,1981L,
                                         1982L,1983L,1984L,1985L,1986L,1987L,
                                         1988L,1989L,1990L,1991L,1992L,1993L,
                                         1994L,1995L,1996L,1997L,1998L,
                                         1999L,2000L,2001L,2002L,2003L,2004L,
                                         2005L,2006L,2007L,2008L,2009L,
                                         2010L,2011L,2012L,2013L,2014L,2015L,
                                         2016L,2017L,2018L,2019L,2020L,
                                         2021L),
        cases = c(107473,164191,165418,152003,
                                         202210,181411,161799,197371,166914,
                                         172559,215343,179135,265269,180518,
                                         147237,214652,227319,103188,183866,
                                         222202,191383,191890,109873,133792,
                                         109860,156517,74715,69479,120718,
                                         68687,45030,37129,60886,62786,
                                         31732,28295,32148,40005,14809,11468,
                                         17749,17135,13005,6799,7717,9718,
                                         4810,3285,4249,3036,3287,1759,
                                         2402,1738,1010,2177,2063,1623,1730,
                                         1248,1895,2463,2276,3589,4195,
                                         2823,3450,4157,4570,2719,4083,6586,
                                         4617,5137,7796,6564,7405,7298,
                                         7867,7580,9771,11647,25827,25616,
                                         15632,10454,13278,16858,27550,18719,
                                         48277,28639,32971,20762,17972,
                                         18975,15609,18617,6124,2116)
      )

```

```{r}
head(cdc)
```

I want a plot of cases per year with ggplot
```{r}
library(ggplot2)
```

```{r}
ggplot(cdc) + 
  aes(year, cases) + 
  geom_line() + 
  geom_vline( xintercept=1947, col= "blue") + 
  geom_vline( xintercept=1992, col= "red") + 
  geom_vline( xintercept=2020, col= "orange")
```

Access data from the CMI-PB project

This database (like many modern projects) uses an API to return JSON format data. 

We will use the R package `jsonlite`. 

```{r}
library(jsonlite)

subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE)

head(subject)
```

Q. How many wP (the older whole-cell vaccine) individuals and aP (newer acellular vaccine) individuals are in this dataset? ANSWER: 60 sP and 58 wP

```{r}
sum(subject$infancy_vac == "wP")

```

```{r}
table(subject$infancy_vac)
```

Q. What is the number od individuals by biological sex and race?
```{r}
table(subject$biological_sex)
```
There are twice as many females as there are males.

```{r}
table(subject$race)
```
Majority of individuals are white (females).

```{r}
table(subject$race, subject$biological_sex)
```

```{r}
subject$year_of_birth
```

# Side-Note: Working with dates

We can use the lubricate package to ease the pain of doing math with dates.

```{r}
library(lubridate)
```

```{r}
today()
```

```{r}
today() - ymd("2000-01-01")
```

```{r}
today() - ymd("2002-9-17")
```

```{r}
today() - mdy("9-17-2002")
```

So what is the age of everyone on our dataset. 

```{r}
time_length( today() - ymd("2000-01-01"),  "years")
```

```{r}
subject$age <- time_length(today() - ymd(subject$year_of_birth), "years")
```

```{r}
ggplot(subject) + 
  aes(age, fill=infancy_vac) + 
  geom_histogram()
```

```{r}
ggplot(subject) + 
  aes(age, fill=infancy_vac) + 
  geom_histogram() + 
  facet_wrap(vars(infancy_vac), nrow=2)
```

## Get more data from CMI-PB

```{r}
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector =TRUE)

head(specimen)
```

```{r}
head(subject)
```


We need to **join** these two tables (subject and speciment) to make a single new "meta" table with all our metadata. We will use the `dplyr` join functions to do this:

```{r}
library(dplyr)

meta <- inner_join(subject, specimen)
head(meta)
```

now we can read some of the other data from CMI-PB

```{r}
ab_titer <- read_json("https://www.cmi-pb.org/api/v4/plasma_ab_titer", simplifyVector = T)

head(ab_titer)
```

One more inner_join()` to add all our metadata in `meta` on to our `ab_data` table:

```{r}
abdata <- inner_join(ab_titer, meta)
head(abdata)
```

Our first exploratory plot:

```{r}
table(abdata$antigen)
```


Why are certain antigens and not others very variable in their detected levels here?

Can you facet or even just color by infancy_vac? Is there some difference?

```{r}
ggplot(abdata) +
  aes(MFI, antigen, col=infancy_vac) +
  geom_boxplot()
```

There are potentially some difference here but in general it is hard to tell with this whole dataset overview...

```{r}
ggplot(abdata) +
  aes(MFI, antigen, col=infancy_vac) +
  geom_boxplot(show.legend = FALSE) + 
  facet_wrap(vars(visit), nrow=2) +
  xlim(0,75) +
  theme_bw()
```

```{r}
table(abdata$dataset)
```

Let's focus in on just the 2023_dataset.

```{r}
abdata.21 <- abdata %>% filter(dataset == "2021_dataset")
table(abdata.21$dataset)
```

Focus on PT antigen IgG levels.

```{r}
pt.21 <- filter(abdata.21, isotype == "IgG",  antigen == "PT")
```

Plot of days (time) relative to boost vs MFI levels
```{r}
ggplot(pt.21) +
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac) + 
  geom_point()
```

```{r}
ggplot(pt.21) +
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac) + 
  geom_line()
```

```{r}
ggplot(pt.21) +
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac, group=subject_id) + 
  geom_point() + 
  geom_line()
```


```{r}
  ggplot(pt.21) +
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac,
        group=subject_id) +
    geom_point() +
    geom_line() +
    geom_vline(xintercept=0, linetype="dashed") +
    geom_vline(xintercept=14, linetype="dashed") +
  labs(title="2021 dataset IgG PT",
       subtitle = "Dashed lines indicate day 0 (pre-boost) and 14 (apparent peak levels)")
```







