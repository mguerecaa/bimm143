---
title: "Lab 7: Hands on with Principal Component Analysis (PCA)"
author: "Melissa Guereca (PID: A16511023)"
date: 02/05/23
format: pdf
editor: visual
---

# Principal Component Analysis (PCA)

## PCA of UK food data

Read data from website and try a few visualizations.

```{r}
url <- "https://tinyurl.com/UK-foods"
x <- read.csv(url, row.names=1)
x
```

> Q. How many rows and columns are in your new data frame named x? What R functions could you use to answer this questions?

```{r}
nrow(x)
ncol(x)
```

There are 17 rows and 4 columns.

```{r}
cols <- rainbow(nrow(x))
barplot(as.matrix(x), col=cols)
```

```{r}
barplot(as.matrix(x), col=cols, beside=TRUE)
```

```{r}
pairs(x, col=cols)
```

PCA to the rescue!!
The main base R PCA function is called `prcomp()` and we will need to give it the transpose of our input data!

```{r}
pca <- prcomp(t(x))
```

There is a nice summary of how well PCA is doing.
```{r}
summary(pca)
```

```{r}
attributes(pca)
```

To make our new PCA plot (a.k.a. PCA score plot) we access `pca$x`

```{r}
plot(pca$x[,1], pca$x[,2])
text(pca$x[,1], pca$x[,2], colnames(x))
```

color up the plot

```{r}
country_cols <- c("orange", "red", "blue", "green")
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")
text(pca$x[,1], pca$x[,2], colnames(x), col=country_cols)
```

## PCA of RNA-Seq data

Read data from website

```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
```

```{r}
pca <- prcomp(t(rna.data))
plot(pca)
```

```{r}
pca <- prcomp(t(rna.data))
summary(pca)
```

Do our PCA plot of this RNA-Seq data.

```{r}
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")
text(pca$x[,1], pca$x[,2], colnames(rna.data))
```











